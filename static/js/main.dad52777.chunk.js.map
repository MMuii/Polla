{"version":3,"sources":["config/firebaseConfig.js","history.js","components/Navbar.js","components/Footer.js","components/ErrorPopup.js","components/CreatePoll.js","components/Error404.js","components/anonymousPoll/PollAnswers.js","components/anonymousPoll/PollResults.js","icons/copy.svg","components/SharePoll.js","components/anonymousPoll/AnonymousPoll.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","settings","timestampsInSnapshots","db","createBrowserHistory","Navbar","content","style","history","location","pathname","startsWith","className","onClick","push","justifyContent","React","Component","Footer","href","target","ErrorPopup","props","errorMsg","hidePopup","CreatePoll","state","pollQuestion","pollAnswers","votes","multipleAnswers","lastAnswerIndex","errorMessage","renderAnswers","Object","keys","map","key","index","type","id","placeholder","onChange","handleChange","autoComplete","addPollAnswer","newContent","setState","e","preventDefault","value","getAttribute","handleQuestionChange","handleSubmit","hashids","Hashids","d","Date","pollId","encode","getTime","answersToUpload","i","length","test","collection","doc","set","then","catch","err","checkMultipleAnswers","checked","dimLayerStyle","display","this","Error404","message","PollAnswers","answers","checkboxesStatus","handleCheckbox","vote","showResults","PollResults","barWidth","allVotes","componentDidMount","get","exists","data","calculateBarPercentages","console","log","forEach","updatedPollAnswers","percentage","Math","round","goBackToVoting","renderResults","width","votesAmountMsg","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref","svgRef","title","height","shapeRendering","textRendering","imageRendering","fillRule","clipRule","viewBox","ref","ForwardRef","forwardRef","SharePoll","copyText","color","copyToClipboard","clipboard","writeText","setTimeout","readOnly","rows","AnonymousPoll","pollData","questionsChecked","didUserVote","err404","match","params","questionsCheckedArr","checkValue","newArr","parentNode","includes","update","FieldValue","increment","prevProps","onRouteChanged","wrappedContent","displayResults","url","_","isEmpty","App","exact","path","component","from","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dad52777.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyCyqngK1oRjTLl4JNFUn94cMDnpU6gjy7g\",\r\n    authDomain: \"money-saver-ff281.firebaseapp.com\",\r\n    databaseURL: \"https://money-saver-ff281.firebaseio.com\",\r\n    projectId: \"money-saver-ff281\",\r\n    storageBucket: \"money-saver-ff281.appspot.com\",\r\n    messagingSenderId: \"19846972859\",\r\n    appId: \"1:19846972859:web:89444c492c62425e91309e\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport const db = firebase.firestore(firebase);\r\n\r\nexport default firebase;","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport history from '../history';\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    render() {\r\n        let content, style;\r\n        \r\n        //if user is on the create poll screen it shows only app logo, if user is on the voting or results screen, it shows also \"create another poll\" button\r\n        if (history.location.pathname.startsWith(\"/poll/\")) {\r\n            content = (\r\n                <>\r\n                    <div className=\"navbar_logo\" onClick={() => history.push('/')}>Polla</div>\r\n                    <div className=\"navbar_create-poll bottom-hover-animation\" onClick={() => history.push('/')}>Create another poll</div>\r\n                </>\r\n            )\r\n\r\n            style = {justifyContent: 'space-between'}\r\n        } else {\r\n            content = (\r\n                <>\r\n                    <div className=\"navbar_logo\" onClick={() => history.push('/')}>Polla</div>\r\n                </>\r\n            )\r\n\r\n            style = {justifyContent: 'center'}\r\n        }\r\n\r\n        return (\r\n            <div className=\"navbar_container\" style={style}>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">Created by <a href=\"https://github.com/MMuii\" target=\"blank\">Marcin Świderek</a></div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst ErrorPopup = (props) => {\r\n    return (\r\n        <div className=\"error-popup\">\r\n            <div className=\"error-popup_message\">{props.errorMsg}</div>\r\n            <div className=\"error-popup_close-btn\" onClick={props.hidePopup}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPopup;","import React from 'react';\r\nimport { db } from '../config/firebaseConfig';\r\nimport Hashids from 'hashids';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport history from '../history';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\nimport ErrorPopup from './ErrorPopup';\r\n\r\nclass CreatePoll extends React.Component {\r\n    state = {\r\n        pollQuestion: '',\r\n        pollAnswers: {'0': {content: '', votes: 0}, '1': {content: '', votes: 0}, '2':{content: '', votes: 0}},\r\n        multipleAnswers: false,\r\n        lastAnswerIndex: 2,\r\n        errorMessage: ''\r\n    }\r\n\r\n    //renders list of input fields for poll options\r\n    renderAnswers = () => {\r\n        const answers = Object.keys(this.state.pollAnswers).map((key, index) => (\r\n            <input type=\"text\" className=\"answer-input\" id={index} placeholder=\"Enter poll answer\" key={index} onChange={this.handleChange}autoComplete=\"off\"></input>\r\n        ));\r\n\r\n        return answers;\r\n    }\r\n\r\n    //adds new input field for next poll option\r\n    addPollAnswer = () => {\r\n        const newContent = this.state.pollAnswers;\r\n        const index = this.state.lastAnswerIndex + 1;\r\n\r\n        newContent[index] = {};\r\n        newContent[index].content = '';\r\n        newContent[index].votes = 0;\r\n\r\n        this.setState({ pollAnswers: newContent, lastAnswerIndex: index });\r\n    }\r\n\r\n    //controlls input from poll option fields\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        const { lastAnswerIndex } = this.state;\r\n\r\n        const newContent = this.state.pollAnswers;\r\n        newContent[e.target.id].content = e.target.value;\r\n        this.setState({ pollAnswers: newContent });\r\n\r\n        if (e.target.getAttribute('id') == lastAnswerIndex && this.state.pollAnswers[lastAnswerIndex].content != '') {\r\n            this.addPollAnswer();\r\n        }\r\n    }\r\n\r\n    //controlls input from poll question field\r\n    handleQuestionChange = (e) => {\r\n        this.setState({ pollQuestion: e.target.value });\r\n    }\r\n    \r\n    //validates user's input and if it is correct uploads data to database\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const {pollQuestion, pollAnswers, multipleAnswers} = this.state;\r\n\r\n        const hashids = new Hashids();\r\n        const d = new Date();\r\n        const pollId = hashids.encode(d.getTime());\r\n\r\n        const answersToUpload = {};\r\n\r\n        for (let i = 0; i < Object.keys(pollAnswers).length; i++) {\r\n            if (/\\S/.test(pollAnswers[i].content) == true) {\r\n                answersToUpload[i] = pollAnswers[i];\r\n            }\r\n        }\r\n\r\n\r\n        if (Object.keys(answersToUpload).length < 1) {\r\n            this.setState({ errorMessage: 'Enter one or more poll options first'});\r\n            return;\r\n        }\r\n\r\n        if (!/\\S/.test(pollQuestion)) {\r\n            this.setState({ errorMessage: 'Enter poll question first' });\r\n            return;\r\n        }\r\n\r\n        db.collection(\"anonymousPolls\").doc(`${pollId}`).set({\r\n            pollQuestion: pollQuestion,\r\n            pollAnswers: answersToUpload,\r\n            multipleAnswers: multipleAnswers\r\n        }).then(() => {\r\n            history.push(`/poll/${pollId}`);\r\n        }).catch((err) => {\r\n            this.setState({ errorMessage: 'Error uploading data to database' });\r\n        return (<div>Error creating poll: {err}</div>)\r\n        })\r\n    }\r\n\r\n    //checks if multiple answers are allowed\r\n    checkMultipleAnswers = (e) => {\r\n        if (e.target.checked) {\r\n            this.setState({ multipleAnswers: true });\r\n            return;\r\n        }\r\n\r\n        this.setState({ multipleAnswers: false });\r\n    }\r\n\r\n    render() {\r\n        const dimLayerStyle = {\r\n            display: (this.state.errorMessage == '') ? 'none' : 'block'\r\n        }\r\n\r\n        const hidePopup = () => {this.setState({ errorMessage: ''} )};\r\n\r\n        return (\r\n            <>\r\n            <div className=\"background\"></div>\r\n            <div className=\"create-poll\">\r\n                <Navbar location={this.props.location}/>\r\n                <div className=\"wrapper wrapper--outer\">\r\n                    <div className=\"wrapper--inner\">\r\n                        <h1>Create poll</h1>\r\n                        <form>\r\n                            <TextareaAutosize className=\"question-input\" placeholder=\"Enter poll question\" onChange={this.handleQuestionChange}/>\r\n                            {this.renderAnswers()}\r\n\r\n                            <label className=\"container container--multiple-answers\"><span>Allow multiple answers</span>\r\n                            <input type=\"checkbox\" onChange={(e) => this.checkMultipleAnswers(e)}/>\r\n                            <span className=\"checkmark\"></span>\r\n                            </label>\r\n                            <button className=\"create-poll-button main-btn\" onClick={(e) => this.handleSubmit(e)}>Create poll</button>\r\n                        </form>\r\n                        <Footer />\r\n                    </div>\r\n                </div>\r\n                <div className=\"popup-dimmer\" style={dimLayerStyle} onClick={hidePopup}></div>\r\n                {this.state.errorMessage && <ErrorPopup errorMsg={this.state.errorMessage} hidePopup={hidePopup}/>}\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreatePoll;","import React from 'react';\r\nimport history from '../history';\r\nimport Logo from '../components/Navbar';\r\n\r\nconst Error404 = (props) => {\r\n    return (\r\n        <div className=\"background anonymous-poll\">\r\n            <Logo />\r\n            <div className=\"wrapper wrapper--inner wrapper--outer\">\r\n                <div className=\"title-wrapper\">\r\n                    <h1>Error 404</h1>\r\n                    <h2>{props.message} Try going <span className=\"text-btn\" onClick={() => {history.push('/create-poll')}}>home</span>.</h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}  \r\n\r\nexport default Error404;","import React from 'react';\r\n\r\nconst PollAnswers = (props) => {\r\n    const { pollAnswers } = props;\r\n\r\n    //renders list of poll options\r\n    const answers = Object.keys(pollAnswers).map((key) => (\r\n        <label id={key} key={key} className=\"container\">{pollAnswers[key].content}\r\n            <input id={key} checked={props.checkboxesStatus[key]} type=\"checkbox\" onChange={(e) => props.handleCheckbox(e)}/>\r\n            <span className=\"checkmark\"></span>\r\n        </label>\r\n    ));\r\n\r\n    return (\r\n        <form>\r\n            {answers}\r\n            <div className=\"btn-wrapper\">\r\n                <button className=\"main-btn\" onClick={(e) => props.vote(e)}>Vote</button>\r\n                <button className=\"show-results-btn bottom-hover-animation\" onClick={props.showResults}>Show results</button>    \r\n            </div>            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PollAnswers;","import React from 'react';\r\nimport history from '../../history';\r\n\r\nclass PollResults extends React.Component {\r\n    state = {\r\n        pollAnswers: {},\r\n        barWidth: {},\r\n        allVotes: 0\r\n    }\r\n\r\n    //fetches current data from database\r\n    componentDidMount = () => {\r\n        const { db, pollId } = this.props;\r\n\r\n        const docRef = db.collection(\"anonymousPolls\").doc(`${pollId}`);\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                this.setState({pollAnswers: doc.data().pollAnswers}, () => {\r\n                    this.calculateBarPercentages();\r\n                });\r\n            } else {\r\n                console.log(\"No such document in database!\");\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"Error getting document: \", err);\r\n        });\r\n    }\r\n\r\n    //calculates how much filled should be each of result bars\r\n    calculateBarPercentages = () => {\r\n        const { pollAnswers } = this.state;\r\n        let allVotes = 0;\r\n\r\n        //counts all the votes\r\n        Object.keys(pollAnswers).forEach(index => {\r\n            allVotes += pollAnswers[index].votes;\r\n            this.setState({ allVotes: allVotes});\r\n        });\r\n\r\n        let updatedPollAnswers = pollAnswers;\r\n\r\n        //divides every option's votes by sum of all votes and multiplies it by 100 to get fill percentage\r\n        Object.keys(pollAnswers).forEach(index => {\r\n            if (allVotes != 0) {\r\n                updatedPollAnswers[index].percentage = Math.round((updatedPollAnswers[index].votes / allVotes) * 100);\r\n            } else {\r\n                updatedPollAnswers[index].percentage = 0;\r\n            }\r\n        });\r\n\r\n        this.setState({ pollAnswers: updatedPollAnswers });\r\n    }\r\n\r\n    //shows voting screen \r\n    goBackToVoting = (e) => {\r\n        e.preventDefault();\r\n        history.push(`/poll/${this.props.pollId}`);\r\n    }\r\n\r\n    //renders poll results\r\n    renderResults = () => {\r\n        const { pollAnswers } = this.state;\r\n\r\n        const resultsList = Object.keys(pollAnswers).map((key) => (\r\n            <div key={key}>\r\n                <div className=\"results_info\">\r\n                    <span className=\"results_info_content\">{pollAnswers[key].content}</span>\r\n                    <span className=\"results_info_votes\">{pollAnswers[key].votes} Votes</span>\r\n                </div>\r\n                <div className=\"results_bar_container\">\r\n                    <div className=\"results_bar_fillable\">\r\n                        <div className=\"results_bar_filled\" style={{width: `${pollAnswers[key].percentage}%`}}></div>\r\n                    </div>\r\n                    <div className=\"results_bar_percentage\">{pollAnswers[key].percentage}%</div>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        return resultsList;\r\n    }\r\n\r\n    render() {\r\n        const { allVotes } = this.state;\r\n        const votesAmountMsg = (allVotes == 1) ? 'vote' : 'votes';\r\n\r\n        return (\r\n            <div>\r\n                {this.renderResults()}\r\n                <div className=\"results_bottom-wrapper\">\r\n                    <div className=\"results_votes-number\"><span>{this.state.allVotes}</span> {votesAmountMsg}</div>\r\n                    <div className=\"results_vote-btn bottom-hover-animation\" onClick={(e) => this.goBackToVoting(e)}>Vote</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PollResults;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M485.297 72.71v40.264h63.533v.118c20.031.024 38.208 8.197 51.342 21.355a72.402 72.402 0 0 1 21.201 51.13h.119V567.35h-.119c-.035 20.008-8.196 38.197-21.354 51.343-13.051 13.027-31.146 21.154-51.13 21.189V640H227.376v-.118c-20.02-.024-38.21-8.197-51.343-21.343a72.423 72.423 0 0 1-21.201-51.13h-.118v-85.572H91.182v-.118c-20.02-.024-38.209-8.197-51.343-21.343-13.04-13.063-21.154-31.158-21.2-51.13h-.119V72.661h.118c.036-20.032 8.209-38.221 21.355-51.343A72.402 72.402 0 0 1 91.123.118v-.119h321.512v.119c20.031.023 38.209 8.197 51.343 21.354 13.04 13.051 21.154 31.146 21.2 51.119h.119v.118zm-55.135 40.264V72.59h.119c-.012-4.712-2.044-9.118-5.28-12.366-3.2-3.2-7.595-5.209-12.366-5.209v.119H91.123v-.119c-4.736.012-9.13 2.044-12.366 5.28-3.2 3.2-5.22 7.595-5.22 12.366h.118v336.584h-.118c.011 4.724 2.055 9.118 5.29 12.366 3.19 3.2 7.596 5.209 12.355 5.209v-.118h63.533V185.636h.118c.023-20.031 8.209-38.22 21.354-51.343a72.402 72.402 0 0 1 51.131-21.2v-.119h202.846zM566.359 567.29V185.578h.118c-.012-4.725-2.056-9.13-5.292-12.379-3.189-3.2-7.594-5.208-12.354-5.208v.118H227.318v-.118c-4.736.012-9.141 2.043-12.378 5.28-3.2 3.2-5.208 7.594-5.208 12.366h.118V567.409h-.118c.011 4.724 2.043 9.118 5.28 12.366 3.2 3.201 7.594 5.209 12.365 5.209v-.118H548.89v.118c4.724-.012 9.13-2.043 12.366-5.28 3.2-3.189 5.22-7.594 5.22-12.354h-.118v-.06z\"\n});\n\nvar SvgCopy = function SvgCopy(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 64,\n    shapeRendering: \"geometricPrecision\",\n    textRendering: \"geometricPrecision\",\n    imageRendering: \"optimizeQuality\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    viewBox: \"0 0 640 640\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgCopy, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/copy.79032fbd.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as CopyIcon } from '../icons/copy.svg';\r\nimport clipboard from 'clipboard-polyfill';\r\n\r\nclass SharePoll extends React.Component {\r\n    state = {\r\n        copyText: `polla.com${this.props.location.pathname}`,\r\n        style: { color: '#000' }\r\n    }\r\n\r\n    //copies poll url to clipboard\r\n    copyToClipboard = () => {\r\n        clipboard.writeText(`polla.com${this.props.location.pathname}`);\r\n\r\n        //shows message that url has been successfully copied\r\n        this.setState({ copyText: 'URL copied to clipboard!', style: { color: '#1a75ff'} });\r\n\r\n        //after 1 second it shows poll url again\r\n        setTimeout(() => {\r\n            this.setState({ copyText: `polla.com${this.props.location.pathname}`, style: { color: '#000'} });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"share-poll\">\r\n                <span>Share your poll!</span>\r\n                <textarea readOnly rows=\"1\" value={this.state.copyText} style={this.state.style}></textarea>\r\n                <button onClick={() => this.copyToClipboard()}><CopyIcon /></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SharePoll;","import React from 'react';\r\nimport { db } from '../../config/firebaseConfig';\r\nimport firebase from '../../config/firebaseConfig';\r\nimport _ from 'lodash';\r\nimport history from '../../history';\r\n\r\nimport Footer from '../Footer';\r\nimport Navbar from '../Navbar';\r\nimport ErrorPopup from '../ErrorPopup';\r\nimport Error404 from '../Error404';\r\nimport PollAnswers from './PollAnswers';\r\nimport PollResults from './PollResults';\r\nimport SharePoll from '../SharePoll';\r\n\r\nclass AnonymousPoll extends React.Component {\r\n    state = {\r\n        pollData: {},\r\n        questionsChecked: [],\r\n        didUserVote: false,\r\n        errorMessage: '',\r\n        err404: false\r\n    }\r\n\r\n    //fetches poll data from database\r\n    componentDidMount = () => {\r\n        const { pollId } = this.props.match.params;\r\n        const docRef = db.collection(\"anonymousPolls\").doc(`${pollId}`);\r\n\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                this.setState({ pollData: doc.data() }, () => {\r\n                    let questionsCheckedArr = []\r\n\r\n                    for (let i = 0; i < Object.keys(this.state.pollData.pollAnswers).length; i++) {\r\n                        questionsCheckedArr.push(false);\r\n                    }\r\n\r\n                    this.setState({ questionsChecked: questionsCheckedArr });\r\n                });\r\n            } else {\r\n                //there is no such document in database\r\n                this.setState({ err404: true });\r\n            }\r\n        }).catch((err) => {\r\n            //error getting document from database\r\n            console.log(\"Error getting document: \", err);\r\n        });\r\n    }\r\n\r\n    //controlls checkboxes, if multiple answers are allowed user can check more than 1 checkbox, if not, it automatically unchecks all checkboxes except the clicked one\r\n    handleCheckbox = (e) => {\r\n        if (this.state.pollData.multipleAnswers == true) {\r\n            let checkValue = false;\r\n\r\n            if (e.target.checked) {\r\n                checkValue = true;\r\n            }\r\n    \r\n            const newArr = this.state.questionsChecked;\r\n            newArr[e.target.parentNode.id] = checkValue;\r\n    \r\n            this.setState({ questionsChecked: newArr });\r\n        } else {\r\n            let newArr = [];\r\n            for (let i = 0; i < this.state.questionsChecked.length; i++) {\r\n                if (i == e.target.id) {\r\n                    newArr.push(true);\r\n                } else {\r\n                    newArr.push(false);\r\n                }\r\n            }\r\n            this.setState({ questionsChecked: newArr });\r\n        }\r\n    }\r\n\r\n    //sends user vote to database and updates votes amount\r\n    vote = (e) => {\r\n        e.preventDefault();\r\n\r\n        //if user has already voted it displays message that he can't vote anymore\r\n        if (!this.state.didUserVote) {\r\n            if (this.state.questionsChecked.includes(true, 0)) {\r\n                const { pollId } = this.props.match.params;\r\n                const { questionsChecked } = this.state;\r\n        \r\n                for (let i = 0; i < questionsChecked.length; i++) {\r\n                    if (questionsChecked[i]) {\r\n                        db.collection('anonymousPolls').doc(`${pollId}`).update({\r\n                            [`pollAnswers.${i}.votes`]: firebase.firestore.FieldValue.increment(1)\r\n                        }).then(() => {\r\n                            this.setState({ didUserVote: true });\r\n                            this.showResults();\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                this.setState({ errorMessage: 'Select your answer first!' });\r\n            }\r\n        } else {\r\n            this.setState({ errorMessage: 'You have already voted on this poll!' });\r\n        }\r\n    }\r\n\r\n    //shows poll results\r\n    showResults = () => {\r\n        history.push(`/poll/${this.props.match.params.pollId}/results`);\r\n    }\r\n\r\n    //runs if URL has changed\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            this.onRouteChanged();\r\n        }\r\n    }\r\n\r\n    //sets questionsChecked state to initial\r\n    onRouteChanged() {\r\n        let newArr = this.state.questionsChecked;\r\n        for (let i = 0; i < newArr.length; i++) {\r\n            newArr[i] = false;\r\n        }\r\n\r\n        this.setState({ questionsChecked: newArr });\r\n    }\r\n\r\n    render() {\r\n        let wrappedContent, content, displayResults = false;\r\n\r\n        if (this.props.match.url == `/poll/${this.props.match.params.pollId}/results`) {\r\n            displayResults = true;\r\n        }\r\n\r\n        //if poll data hasn't been downloaded yet, it shows loading screen\r\n        if (_.isEmpty(this.state.pollData) && !this.state.err404) {\r\n            wrappedContent = (\r\n                <>\r\n                    <div className=\"title-wrapper\">\r\n                        <h1>Loading</h1>\r\n                        <h2>Just a second...</h2>\r\n                    </div>\r\n                </>\r\n            )\r\n        } else if (this.state.err404) {\r\n            return <Error404 message={'There is no such poll in database!'}/>\r\n        } else {\r\n            if (displayResults) {\r\n                content = <PollResults pollAnswers={this.state.pollData.pollAnswers} db={db} pollId={this.props.match.params.pollId}/>;\r\n            } else {\r\n                content = <PollAnswers pollAnswers={this.state.pollData.pollAnswers} vote={this.vote} handleCheckbox={this.handleCheckbox} showResults={this.showResults} checkboxesStatus={this.state.questionsChecked}/>;\r\n            }\r\n\r\n            //content to render\r\n            wrappedContent = (\r\n                <>\r\n                    <div className=\"title-wrapper\">\r\n                        <h1>{this.state.pollData.pollQuestion}</h1>\r\n                        {displayResults ? <></> : <h2>{this.state.pollData.multipleAnswers ? 'Select one or more answers' : 'Select one answer'}</h2>}\r\n                    </div>\r\n                    {content}\r\n                </>\r\n            );\r\n        }\r\n\r\n        //if there is an error and error popup is visible, it also shows half-transparent black layer to dim rest of the content\r\n        const dimLayerStyle = {\r\n            display: (this.state.errorMessage == '') ? 'none' : 'block'\r\n        }\r\n\r\n        //hides error popup\r\n        const hidePopup = () => {this.setState({ errorMessage: ''} )};\r\n\r\n        return (\r\n            <>\r\n            <div className=\"background\"></div>\r\n            <div className=\"anonymous-poll\">\r\n                <Navbar location={this.props.location} pollId={this.props.match.params}/>\r\n                <div className=\"wrapper wrapper--outer\">\r\n                    <div className=\"wrapper--inner\">\r\n                        {wrappedContent}\r\n                    </div>\r\n                    <div className=\"wrapper--inner\">\r\n                        <SharePoll location={this.props.location}/>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n                <div className=\"popup-dimmer\" style={dimLayerStyle} onClick={hidePopup}></div>\r\n                {this.state.errorMessage && <ErrorPopup errorMsg={this.state.errorMessage} hidePopup={hidePopup}/>}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnonymousPoll;","import React from 'react';\nimport { Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport CreatePoll from './components/CreatePoll';\nimport AnonymousPoll from './components/anonymousPoll/AnonymousPoll';\n\nimport history from './history';\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path=\"/create-poll\" component={CreatePoll} />\n                    <Route exact path=\"/poll/:pollId\" component={AnonymousPoll} />\n                    <Route exact path=\"/poll/:pollId/results\" component={AnonymousPoll} />\n                    <Redirect from=\"/\" to=\"/create-poll\" /> \n\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sass/main.scss';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}