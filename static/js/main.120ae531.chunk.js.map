{"version":3,"sources":["history.js","components/Navbar.js","components/Error404.js","config/firebaseConfig.js","components/Footer.js","components/ErrorPopup.js","components/CreatePoll.js","components/anonymousPoll/PollAnswers.js","components/anonymousPoll/PollResults.js","icons/copy.svg","components/SharePoll.js","components/anonymousPoll/AnonymousPoll.js","App.js","index.js"],"names":["createBrowserHistory","Navbar","content","style","history","location","pathname","startsWith","className","onClick","push","justifyContent","React","Component","Error404","props","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","settings","timestampsInSnapshots","db","Footer","href","target","ErrorPopup","errorMsg","hidePopup","CreatePoll","state","pollQuestion","pollAnswers","votes","multipleAnswers","lastAnswerIndex","errorMessage","renderAnswers","Object","keys","map","key","index","type","id","placeholder","onChange","handleChange","autoComplete","addPollAnswer","newContent","setState","e","preventDefault","value","getAttribute","handleQuestionChange","handleSubmit","hashids","Hashids","d","Date","pollId","encode","getTime","answersToUpload","i","length","test","collection","doc","set","then","catch","err","checkMultipleAnswers","checked","dimLayerStyle","display","this","PollAnswers","answers","checkboxesStatus","handleCheckbox","vote","showResults","PollResults","barWidth","allVotes","componentDidMount","get","exists","data","calculateBarPercentages","console","log","forEach","updatedPollAnswers","percentage","Math","round","goBackToVoting","renderResults","width","votesAmountMsg","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref","svgRef","title","height","shapeRendering","textRendering","imageRendering","fillRule","clipRule","viewBox","ref","ForwardRef","forwardRef","SharePoll","copyText","color","copyToClipboard","clipboard","writeText","setTimeout","readOnly","rows","AnonymousPoll","pollData","questionsChecked","didUserVote","err404","match","params","questionsCheckedArr","checkValue","newArr","parentNode","includes","update","FieldValue","increment","prevProps","onRouteChanged","wrappedContent","displayResults","url","_","isEmpty","App","exact","path","component","from","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.120ae531.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport history from '../history';\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    render() {\r\n        let content, style;\r\n        \r\n        //if user is on the create poll screen it shows only app logo, if user is on the voting or results screen, it shows also \"create another poll\" button\r\n        if (history.location.pathname.startsWith(\"/poll/\")) {\r\n            content = (\r\n                <>\r\n                    <div className=\"navbar_logo\" onClick={() => history.push('/')}>Polla</div>\r\n                    <div className=\"navbar_create-poll bottom-hover-animation\" onClick={() => history.push('/')}>Create another poll</div>\r\n                </>\r\n            )\r\n\r\n            style = {justifyContent: 'space-between'}\r\n        } else {\r\n            content = (\r\n                <>\r\n                    <div className=\"navbar_logo\" onClick={() => history.push('/')}>Polla</div>\r\n                </>\r\n            )\r\n\r\n            style = {justifyContent: 'center'}\r\n        }\r\n\r\n        return (\r\n            <div className=\"navbar_container\" style={style}>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport history from '../history';\r\nimport Logo from '../components/Navbar';\r\n\r\nconst Error404 = (props) => {\r\n    return (\r\n        <div className=\"background anonymous-poll\">\r\n            <Logo />\r\n            <div className=\"wrapper wrapper--inner wrapper--outer\">\r\n                <div className=\"title-wrapper\">\r\n                    <h1>Error 404</h1>\r\n                    <h2>{props.message} Try going <span className=\"text-btn\" onClick={() => {history.push('/create-poll')}}>home</span>.</h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}  \r\n\r\nexport default Error404;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyCyqngK1oRjTLl4JNFUn94cMDnpU6gjy7g\",\r\n    authDomain: \"money-saver-ff281.firebaseapp.com\",\r\n    databaseURL: \"https://money-saver-ff281.firebaseio.com\",\r\n    projectId: \"money-saver-ff281\",\r\n    storageBucket: \"money-saver-ff281.appspot.com\",\r\n    messagingSenderId: \"19846972859\",\r\n    appId: \"1:19846972859:web:89444c492c62425e91309e\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport const db = firebase.firestore(firebase);\r\n\r\nexport default firebase;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">Created by <a href=\"https://github.com/MMuii\" target=\"blank\">Marcin Świderek</a></div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst ErrorPopup = (props) => {\r\n    return (\r\n        <div className=\"error-popup\">\r\n            <div className=\"error-popup_message\">{props.errorMsg}</div>\r\n            <div className=\"error-popup_close-btn\" onClick={props.hidePopup}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPopup;","import React from 'react';\r\nimport { db } from '../config/firebaseConfig';\r\nimport Hashids from 'hashids';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport history from '../history';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\nimport ErrorPopup from './ErrorPopup';\r\n\r\nclass CreatePoll extends React.Component {\r\n    state = {\r\n        pollQuestion: '',\r\n        pollAnswers: {'0': {content: '', votes: 0}, '1': {content: '', votes: 0}, '2':{content: '', votes: 0}},\r\n        multipleAnswers: false,\r\n        lastAnswerIndex: 2,\r\n        errorMessage: ''\r\n    }\r\n\r\n    //renders list of input fields for poll options\r\n    renderAnswers = () => {\r\n        const answers = Object.keys(this.state.pollAnswers).map((key, index) => (\r\n            <input type=\"text\" className=\"answer-input\" id={index} placeholder=\"Enter poll answer\" key={index} onChange={this.handleChange}autoComplete=\"off\"></input>\r\n        ));\r\n\r\n        return answers;\r\n    }\r\n\r\n    //adds new input field for next poll option\r\n    addPollAnswer = () => {\r\n        const newContent = this.state.pollAnswers;\r\n        const index = this.state.lastAnswerIndex + 1;\r\n\r\n        newContent[index] = {};\r\n        newContent[index].content = '';\r\n        newContent[index].votes = 0;\r\n\r\n        this.setState({ pollAnswers: newContent, lastAnswerIndex: index });\r\n    }\r\n\r\n    //controlls input from poll option fields\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        const { lastAnswerIndex } = this.state;\r\n\r\n        const newContent = this.state.pollAnswers;\r\n        newContent[e.target.id].content = e.target.value;\r\n        this.setState({ pollAnswers: newContent });\r\n\r\n        if (e.target.getAttribute('id') == lastAnswerIndex && this.state.pollAnswers[lastAnswerIndex].content != '') {\r\n            this.addPollAnswer();\r\n        }\r\n    }\r\n\r\n    //controlls input from poll question field\r\n    handleQuestionChange = (e) => {\r\n        this.setState({ pollQuestion: e.target.value });\r\n    }\r\n    \r\n    //validates user's input and if it is correct uploads data to database\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const {pollQuestion, pollAnswers, multipleAnswers} = this.state;\r\n\r\n        const hashids = new Hashids();\r\n        const d = new Date();\r\n        const pollId = hashids.encode(d.getTime());\r\n\r\n        const answersToUpload = {};\r\n\r\n        for (let i = 0; i < Object.keys(pollAnswers).length; i++) {\r\n            if (/\\S/.test(pollAnswers[i].content) == true) {\r\n                answersToUpload[i] = pollAnswers[i];\r\n            }\r\n        }\r\n\r\n\r\n        if (Object.keys(answersToUpload).length < 1) {\r\n            this.setState({ errorMessage: 'Enter one or more poll options first'});\r\n            return;\r\n        }\r\n\r\n        if (!/\\S/.test(pollQuestion)) {\r\n            this.setState({ errorMessage: 'Enter poll question first' });\r\n            return;\r\n        }\r\n\r\n        db.collection(\"anonymousPolls\").doc(`${pollId}`).set({\r\n            pollQuestion: pollQuestion,\r\n            pollAnswers: answersToUpload,\r\n            multipleAnswers: multipleAnswers\r\n        }).then(() => {\r\n            history.push(`/poll/${pollId}`);\r\n        }).catch((err) => {\r\n            this.setState({ errorMessage: 'Error uploading data to database' });\r\n        return (<div>Error creating poll: {err}</div>)\r\n        })\r\n    }\r\n\r\n    //checks if multiple answers are allowed\r\n    checkMultipleAnswers = (e) => {\r\n        if (e.target.checked) {\r\n            this.setState({ multipleAnswers: true });\r\n            return;\r\n        }\r\n\r\n        this.setState({ multipleAnswers: false });\r\n    }\r\n\r\n    render() {\r\n        const dimLayerStyle = {\r\n            display: (this.state.errorMessage == '') ? 'none' : 'block'\r\n        }\r\n\r\n        const hidePopup = () => {this.setState({ errorMessage: ''} )};\r\n\r\n        return (\r\n            <>\r\n            <div className=\"background\"></div>\r\n            <div className=\"create-poll\">\r\n                <Navbar location={this.props.location}/>\r\n                <div className=\"wrapper wrapper--outer\">\r\n                    <div className=\"wrapper--inner\">\r\n                        <h1>Create poll</h1>\r\n                        <form>\r\n                            <TextareaAutosize className=\"question-input\" placeholder=\"Enter poll question\" onChange={this.handleQuestionChange}/>\r\n                            {this.renderAnswers()}\r\n\r\n                            <label className=\"container container--multiple-answers\"><span>Allow multiple answers</span>\r\n                            <input type=\"checkbox\" onChange={(e) => this.checkMultipleAnswers(e)}/>\r\n                            <span className=\"checkmark\"></span>\r\n                            </label>\r\n                            <button className=\"create-poll-button main-btn\" onClick={(e) => this.handleSubmit(e)}>Create poll</button>\r\n                        </form>\r\n                        <Footer />\r\n                    </div>\r\n                </div>\r\n                <div className=\"popup-dimmer\" style={dimLayerStyle} onClick={hidePopup}></div>\r\n                {this.state.errorMessage && <ErrorPopup errorMsg={this.state.errorMessage} hidePopup={hidePopup}/>}\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreatePoll;","import React from 'react';\r\n\r\nconst PollAnswers = (props) => {\r\n    const { pollAnswers } = props;\r\n\r\n    //renders list of poll options\r\n    const answers = Object.keys(pollAnswers).map((key) => (\r\n        <label id={key} key={key} className=\"container\">{pollAnswers[key].content}\r\n            <input id={key} checked={props.checkboxesStatus[key]} type=\"checkbox\" onChange={(e) => props.handleCheckbox(e)}/>\r\n            <span className=\"checkmark\"></span>\r\n        </label>\r\n    ));\r\n\r\n    return (\r\n        <form>\r\n            {answers}\r\n            <div className=\"btn-wrapper\">\r\n                <button className=\"main-btn\" onClick={(e) => props.vote(e)}>Vote</button>\r\n                <button className=\"show-results-btn bottom-hover-animation\" onClick={props.showResults}>Show results</button>    \r\n            </div>            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PollAnswers;","import React from 'react';\r\nimport history from '../../history';\r\n\r\nclass PollResults extends React.Component {\r\n    state = {\r\n        pollAnswers: {},\r\n        barWidth: {},\r\n        allVotes: 0\r\n    }\r\n\r\n    //fetches current data from database\r\n    componentDidMount = () => {\r\n        const { db, pollId } = this.props;\r\n\r\n        const docRef = db.collection(\"anonymousPolls\").doc(`${pollId}`);\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                this.setState({pollAnswers: doc.data().pollAnswers}, () => {\r\n                    this.calculateBarPercentages();\r\n                });\r\n            } else {\r\n                console.log(\"No such document in database!\");\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"Error getting document: \", err);\r\n        });\r\n    }\r\n\r\n    //calculates how much filled should be each of result bars\r\n    calculateBarPercentages = () => {\r\n        const { pollAnswers } = this.state;\r\n        let allVotes = 0;\r\n\r\n        //counts all the votes\r\n        Object.keys(pollAnswers).forEach(index => {\r\n            allVotes += pollAnswers[index].votes;\r\n            this.setState({ allVotes: allVotes});\r\n        });\r\n\r\n        let updatedPollAnswers = pollAnswers;\r\n\r\n        //divides every option's votes by sum of all votes and multiplies it by 100 to get fill percentage\r\n        Object.keys(pollAnswers).forEach(index => {\r\n            if (allVotes != 0) {\r\n                updatedPollAnswers[index].percentage = Math.round((updatedPollAnswers[index].votes / allVotes) * 100);\r\n            } else {\r\n                updatedPollAnswers[index].percentage = 0;\r\n            }\r\n        });\r\n\r\n        this.setState({ pollAnswers: updatedPollAnswers });\r\n    }\r\n\r\n    //shows voting screen \r\n    goBackToVoting = (e) => {\r\n        e.preventDefault();\r\n        history.push(`/poll/${this.props.pollId}`);\r\n    }\r\n\r\n    //renders poll results\r\n    renderResults = () => {\r\n        const { pollAnswers } = this.state;\r\n\r\n        const resultsList = Object.keys(pollAnswers).map((key) => (\r\n            <div key={key}>\r\n                <div className=\"results_info\">\r\n                    <span className=\"results_info_content\">{pollAnswers[key].content}</span>\r\n                    <span className=\"results_info_votes\">{pollAnswers[key].votes} Votes</span>\r\n                </div>\r\n                <div className=\"results_bar_container\">\r\n                    <div className=\"results_bar_fillable\">\r\n                        <div className=\"results_bar_filled\" style={{width: `${pollAnswers[key].percentage}%`}}></div>\r\n                    </div>\r\n                    <div className=\"results_bar_percentage\">{pollAnswers[key].percentage}%</div>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        return resultsList;\r\n    }\r\n\r\n    render() {\r\n        const { allVotes } = this.state;\r\n        const votesAmountMsg = (allVotes == 1) ? 'vote' : 'votes';\r\n\r\n        return (\r\n            <div>\r\n                {this.renderResults()}\r\n                <div className=\"results_bottom-wrapper\">\r\n                    <div className=\"results_votes-number\"><span>{this.state.allVotes}</span> {votesAmountMsg}</div>\r\n                    <div className=\"results_vote-btn bottom-hover-animation\" onClick={(e) => this.goBackToVoting(e)}>Vote</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PollResults;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M485.297 72.71v40.264h63.533v.118c20.031.024 38.208 8.197 51.342 21.355a72.402 72.402 0 0 1 21.201 51.13h.119V567.35h-.119c-.035 20.008-8.196 38.197-21.354 51.343-13.051 13.027-31.146 21.154-51.13 21.189V640H227.376v-.118c-20.02-.024-38.21-8.197-51.343-21.343a72.423 72.423 0 0 1-21.201-51.13h-.118v-85.572H91.182v-.118c-20.02-.024-38.209-8.197-51.343-21.343-13.04-13.063-21.154-31.158-21.2-51.13h-.119V72.661h.118c.036-20.032 8.209-38.221 21.355-51.343A72.402 72.402 0 0 1 91.123.118v-.119h321.512v.119c20.031.023 38.209 8.197 51.343 21.354 13.04 13.051 21.154 31.146 21.2 51.119h.119v.118zm-55.135 40.264V72.59h.119c-.012-4.712-2.044-9.118-5.28-12.366-3.2-3.2-7.595-5.209-12.366-5.209v.119H91.123v-.119c-4.736.012-9.13 2.044-12.366 5.28-3.2 3.2-5.22 7.595-5.22 12.366h.118v336.584h-.118c.011 4.724 2.055 9.118 5.29 12.366 3.19 3.2 7.596 5.209 12.355 5.209v-.118h63.533V185.636h.118c.023-20.031 8.209-38.22 21.354-51.343a72.402 72.402 0 0 1 51.131-21.2v-.119h202.846zM566.359 567.29V185.578h.118c-.012-4.725-2.056-9.13-5.292-12.379-3.189-3.2-7.594-5.208-12.354-5.208v.118H227.318v-.118c-4.736.012-9.141 2.043-12.378 5.28-3.2 3.2-5.208 7.594-5.208 12.366h.118V567.409h-.118c.011 4.724 2.043 9.118 5.28 12.366 3.2 3.201 7.594 5.209 12.365 5.209v-.118H548.89v.118c4.724-.012 9.13-2.043 12.366-5.28 3.2-3.189 5.22-7.594 5.22-12.354h-.118v-.06z\"\n});\n\nvar SvgCopy = function SvgCopy(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 64,\n    shapeRendering: \"geometricPrecision\",\n    textRendering: \"geometricPrecision\",\n    imageRendering: \"optimizeQuality\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    viewBox: \"0 0 640 640\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgCopy, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/copy.79032fbd.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as CopyIcon } from '../icons/copy.svg';\r\nimport clipboard from 'clipboard-polyfill';\r\n\r\nclass SharePoll extends React.Component {\r\n    state = {\r\n        copyText: `mmuii.github.io${this.props.location.pathname}`,\r\n        style: { color: '#000' }\r\n    }\r\n\r\n    //copies poll url to clipboard\r\n    copyToClipboard = () => {\r\n        clipboard.writeText(`polla.com/poll/NLZDYzL2z${this.props.location.pathname}`);\r\n\r\n        //shows message that url has been successfully copied\r\n        this.setState({ copyText: 'URL copied to clipboard!', style: { color: '#1a75ff'} });\r\n\r\n        //after 1 second it shows poll url again\r\n        setTimeout(() => {\r\n            this.setState({ copyText: `polla.com/poll/NLZDYzL2z${this.props.location.pathname}`, style: { color: '#000'} });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"share-poll\">\r\n                <span>Share your poll!</span>\r\n                <textarea readOnly rows=\"1\" value={this.state.copyText} style={this.state.style}></textarea>\r\n                <button onClick={() => this.copyToClipboard()}><CopyIcon /></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SharePoll;","import React from 'react';\r\nimport { db } from '../../config/firebaseConfig';\r\nimport firebase from '../../config/firebaseConfig';\r\nimport _ from 'lodash';\r\nimport history from '../../history';\r\n\r\nimport Footer from '../Footer';\r\nimport Navbar from '../Navbar';\r\nimport ErrorPopup from '../ErrorPopup';\r\nimport Error404 from '../Error404';\r\nimport PollAnswers from './PollAnswers';\r\nimport PollResults from './PollResults';\r\nimport SharePoll from '../SharePoll';\r\n\r\nclass AnonymousPoll extends React.Component {\r\n    state = {\r\n        pollData: {},\r\n        questionsChecked: [],\r\n        didUserVote: false,\r\n        errorMessage: '',\r\n        err404: false\r\n    }\r\n\r\n    //fetches poll data from database\r\n    componentDidMount = () => {\r\n        const { pollId } = this.props.match.params;\r\n        const docRef = db.collection(\"anonymousPolls\").doc(`${pollId}`);\r\n\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                this.setState({ pollData: doc.data() }, () => {\r\n                    let questionsCheckedArr = []\r\n\r\n                    for (let i = 0; i < Object.keys(this.state.pollData.pollAnswers).length; i++) {\r\n                        questionsCheckedArr.push(false);\r\n                    }\r\n\r\n                    this.setState({ questionsChecked: questionsCheckedArr });\r\n                });\r\n            } else {\r\n                //there is no such document in database\r\n                this.setState({ err404: true });\r\n            }\r\n        }).catch((err) => {\r\n            //error getting document from database\r\n            console.log(\"Error getting document: \", err);\r\n        });\r\n    }\r\n\r\n    //controlls checkboxes, if multiple answers are allowed user can check more than 1 checkbox, if not, it automatically unchecks all checkboxes except the clicked one\r\n    handleCheckbox = (e) => {\r\n        if (this.state.pollData.multipleAnswers == true) {\r\n            let checkValue = false;\r\n\r\n            if (e.target.checked) {\r\n                checkValue = true;\r\n            }\r\n    \r\n            const newArr = this.state.questionsChecked;\r\n            newArr[e.target.parentNode.id] = checkValue;\r\n    \r\n            this.setState({ questionsChecked: newArr });\r\n        } else {\r\n            let newArr = [];\r\n            for (let i = 0; i < this.state.questionsChecked.length; i++) {\r\n                if (i == e.target.id) {\r\n                    newArr.push(true);\r\n                } else {\r\n                    newArr.push(false);\r\n                }\r\n            }\r\n            this.setState({ questionsChecked: newArr });\r\n        }\r\n    }\r\n\r\n    //sends user vote to database and updates votes amount\r\n    vote = (e) => {\r\n        e.preventDefault();\r\n\r\n        //if user has already voted it displays message that he can't vote anymore\r\n        if (!this.state.didUserVote) {\r\n            if (this.state.questionsChecked.includes(true, 0)) {\r\n                const { pollId } = this.props.match.params;\r\n                const { questionsChecked } = this.state;\r\n        \r\n                for (let i = 0; i < questionsChecked.length; i++) {\r\n                    if (questionsChecked[i]) {\r\n                        db.collection('anonymousPolls').doc(`${pollId}`).update({\r\n                            [`pollAnswers.${i}.votes`]: firebase.firestore.FieldValue.increment(1)\r\n                        }).then(() => {\r\n                            this.setState({ didUserVote: true });\r\n                            this.showResults();\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                this.setState({ errorMessage: 'Select your answer first!' });\r\n            }\r\n        } else {\r\n            this.setState({ errorMessage: 'You have already voted on this poll!' });\r\n        }\r\n    }\r\n\r\n    //shows poll results\r\n    showResults = () => {\r\n        history.push(`/poll/${this.props.match.params.pollId}/results`);\r\n    }\r\n\r\n    //runs if URL has changed\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            this.onRouteChanged();\r\n        }\r\n    }\r\n\r\n    //sets questionsChecked state to initial\r\n    onRouteChanged() {\r\n        let newArr = this.state.questionsChecked;\r\n        for (let i = 0; i < newArr.length; i++) {\r\n            newArr[i] = false;\r\n        }\r\n\r\n        this.setState({ questionsChecked: newArr });\r\n    }\r\n\r\n    render() {\r\n        let wrappedContent, content, displayResults = false;\r\n\r\n        if (this.props.match.url == `/poll/${this.props.match.params.pollId}/results`) {\r\n            displayResults = true;\r\n        }\r\n\r\n        //if poll data hasn't been downloaded yet, it shows loading screen\r\n        if (_.isEmpty(this.state.pollData) && !this.state.err404) {\r\n            wrappedContent = (\r\n                <>\r\n                    <div className=\"title-wrapper\">\r\n                        <h1>Loading</h1>\r\n                        <h2>Just a second...</h2>\r\n                    </div>\r\n                </>\r\n            )\r\n        } else if (this.state.err404) {\r\n            return <Error404 message={'There is no such poll in database!'}/>\r\n        } else {\r\n            if (displayResults) {\r\n                content = <PollResults pollAnswers={this.state.pollData.pollAnswers} db={db} pollId={this.props.match.params.pollId}/>;\r\n            } else {\r\n                content = <PollAnswers pollAnswers={this.state.pollData.pollAnswers} vote={this.vote} handleCheckbox={this.handleCheckbox} showResults={this.showResults} checkboxesStatus={this.state.questionsChecked}/>;\r\n            }\r\n\r\n            //content to render\r\n            wrappedContent = (\r\n                <>\r\n                    <div className=\"title-wrapper\">\r\n                        <h1>{this.state.pollData.pollQuestion}</h1>\r\n                        {displayResults ? <></> : <h2>{this.state.pollData.multipleAnswers ? 'Select one or more answers' : 'Select one answer'}</h2>}\r\n                    </div>\r\n                    {content}\r\n                </>\r\n            );\r\n        }\r\n\r\n        //if there is an error and error popup is visible, it also shows half-transparent black layer to dim rest of the content\r\n        const dimLayerStyle = {\r\n            display: (this.state.errorMessage == '') ? 'none' : 'block'\r\n        }\r\n\r\n        //hides error popup\r\n        const hidePopup = () => {this.setState({ errorMessage: ''} )};\r\n\r\n        return (\r\n            <>\r\n            <div className=\"background\"></div>\r\n            <div className=\"anonymous-poll\">\r\n                <Navbar location={this.props.location} pollId={this.props.match.params}/>\r\n                <div className=\"wrapper wrapper--outer\">\r\n                    <div className=\"wrapper--inner\">\r\n                        {wrappedContent}\r\n                    </div>\r\n                    <div className=\"wrapper--inner\">\r\n                        <SharePoll location={this.props.location}/>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n                <div className=\"popup-dimmer\" style={dimLayerStyle} onClick={hidePopup}></div>\r\n                {this.state.errorMessage && <ErrorPopup errorMsg={this.state.errorMessage} hidePopup={hidePopup}/>}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnonymousPoll;","import React from 'react';\nimport { Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Error404 from './components/Error404';\nimport CreatePoll from './components/CreatePoll';\nimport AnonymousPoll from './components/anonymousPoll/AnonymousPoll';\n\nimport history from './history';\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path=\"/create-poll\" component={CreatePoll} />\n                    <Route exact path=\"/poll/:pollId\" component={AnonymousPoll} />\n                    <Route exact path=\"/poll/:pollId/results\" component={AnonymousPoll} />\n                    <Redirect from=\"/Polla\" to=\"/create-poll\" /> \n                    <Route path=\"/\" component={() => <Error404 message=\"There is no URL you're looking for.\"/>} />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sass/main.scss';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}